This document details the criteria that the source to source compiler will use to determine whether a code block may be parallelised. 

PATTERN: MAP
	
	A map is the simplest possible parallel pattern. Essentially, the same operation is performed on all of or a set of values in an array.

	CRITERIA

		1)	Assignments and accesses to arrays must be to elements with where all dimension are linear functions of the loop variable.
		2) 	Where the loop is nested, the loop variable of an outer loop may be considered part of the loop variable.
		3)	Assignments to scalar values, that were declared before the start of the loop, must be temporary and therefore never accessed after the loop has finished.

	EXAMPLES

		Extremely simple addition of elements:
			
			arrayA[arrayLength]
			arrayB[arrayLength]
			arrayC[arrayLength]
			for i in range(arrayLength):
				arrayA[i] = arrayB[i] + arrayC[i]

		Additions over multi dimensional arrays:

			arrayA[dimensionA][dimensionB]
			arrayB[dimensionA][dimensionB]
			arrayC[dimensionA][dimensionB]
			for i in range(dimensionA):
				for j in range(dimensionB):
					arrayA[i][j] = arrayB[i][j] + arrayC[i][j]

		Additions and subtractions over multi dimensional arrays, showing rules for multi dimensional accesses:

			arrayA[dimensionA][dimensionB]
			arrayB[dimensionA][dimensionB]
			arrayC[dimensionA][dimensionB]
			
			for i in range(dimensionB):
				arrayA[0][i] = arrayB[0][i] + arrayC[0][i]
			for i in range(dimensionB):
				arrayA[1][i] = arrayB[1][i] - arrayC[1][i]

		Extremely simple addition of elements, involving use of scalar factor:
			
			arrayA[arrayLength]
			arrayB[arrayLength]
			arrayC[arrayLength]
			factor
			for i in range(arrayLength):
				arrayA[i] = (arrayB[i] + arrayC[i])*factor

		Extremely simple addition of elements, involving assignment temporary value:
			
			arrayA[arrayLength]
			arrayB[arrayLength]
			arrayC[arrayLength]
			temp
			for i in range(arrayLength):
				temp = arrayB[i] + arrayC[i]
				arrayA[i] = temp

		Value of element depends on a call to a function
			
			arrayA[arrayLength]
			for i in range(arrayLength):
				arrayA[i] = function(i)

		Elements that are accessed are linear functions of the loop variable
			
			arrayA[arrayLength]
			arrayB[arrayLength]
			arrayC[arrayLength]
			temp
			for i in range(arrayLength):
				arrayA[i*3] = arrayB[i+17] + arrayC[i/2]